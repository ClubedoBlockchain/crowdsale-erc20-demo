name: Client CI

on:
  push:
    branches: [master]
    paths: 
      -  client/**
      - .github/workflows/client-ci.yml
permissions:
  contents: write
env:
  TOTAL_SUPPLY: ${{ secrets.TOTAL_SUPPLY }}
  RATE: ${{ secrets.RATE }}
  MNEMONIC: ${{ secrets.MNEMONIC }}
  ALCHEMY_GOERLI: ${{ secrets.ALCHEMY_GOERLI }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  IAM_ROLE: ${{ secrets.IAM_ROLE }}
jobs: 
  test: 
    runs-on: ubuntu-latest
    steps:
      - 
        name: "Checkout Truffle"
        uses: actions/checkout@v3
      
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      
      - name: "Install and Build"
        run: |
          cd truffle
          npm install -g truffle
          npm install -g ganache-cli
          npm i
      
      - name: "Run Ganache CLI"
        run: |
          ganache-cli -p 8545 --gasLimit=0x1fffffffffffff --allowUnlimitedContractSize -e 1000000000 > /dev/null & while netstat -lnt | awk '$4 ~ /:8545$/ {exit 1}'; do sleep 5; done
      
      - name: "Run Truffle Testing"
        run: |
          cd truffle
          truffle test
  
  build-contracts: 
    needs: test
    runs-on: ubuntu-latest
    steps:
      - 
        name: "Checkout Truffle"
        uses: actions/checkout@v3
      - name: "Run Migrate"
        run: |
          cd truffle
          npm install -g truffle
          npm i
          truffle migrate --network goerli
          chmod +x pos-deploy.sh
          ./pos-deploy.sh

      - 
        name: "Upload to Clients"
        uses: actions/upload-artifact@v2
        with:
          name: client-contracts
          path: client/src/contracts

      - 
        name: "Upload to Rust"
        uses: actions/upload-artifact@v2
        with:
          name: rust-contracts
          path: sign_on_rust/contracts
  
  deploy-lambda:
    needs: build-contracts
    runs-on: ubuntu-latest
    steps:
      - 
        name: "Checkout Lambda"
        uses: actions/checkout@v3

      - 
        name: "Deploy Lambda"
        uses: actions/download-artifact@v2
        with:
          name: rust-contracts
          path: sign_on_rust/contracts

      -
        name: "Install dependencies"  
        run: |
          ls
          cd sign_on_rust
          npm install -g @ziglang/cli
          rustup target add x86_64-unknown-linux-gnu
          cargo install cargo-lambda
      
      - 
        name: "Build with Cargo"
        run: |
          cd sign_on_rust
          cargo lambda build --release --target x86_64-unknown-linux-gnu

      - 
        name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - 
        name: "Deploy to Lambda"
        continue-on-error: true
        run: |
            cd sign_on_rust
            cargo lambda deploy --iam-role $IAM_ROLE
            aws lambda publish-version --function-name sign_on_rust >> /dev/null
  
  deploy-frontend:
    needs: build-contracts
    runs-on: ubuntu-latest
    steps:
      - 
        name: "Checkout Frontend"
        uses: actions/checkout@v3

      - 
        name: "Client"
        uses: actions/download-artifact@v2
        with:
          name: client-contracts
          path: client/src/contracts

      - 
        name: "Frontend Install and Build"
        run: |
          ls
          cd client
          npm i
          npm run build
      - 
        name: "Deploy Frontend ðŸš€"
        uses: JamesIves/github-pages-deploy-action@v4
        with: 
          folder: client/build
